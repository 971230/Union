package com.zte.cbss.autoprocess.request;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.http.HttpEntity;
import org.apache.http.util.EntityUtils;

import com.zte.cbss.autoprocess.AbsHttpRequest;
import com.zte.cbss.autoprocess.HttpLoginClient;
import com.zte.cbss.autoprocess.PageHttpResponse;
import com.zte.cbss.autoprocess.model.data.PageData;

public class IndexPage2_3Request extends AbsHttpRequest<PageData,Boolean> {

	PageData data;
	
	public IndexPage2_3Request(HttpLoginClient client) {
		super(client);
	}

	@Override
	protected boolean pack(PageData data) {
		this.data = data;
		return true;
	}

	@Override
	protected Boolean unpack(PageHttpResponse response) {
		try{
			this.data.setReferer(response.getUrl());
//			logger.info(response.getResponse().getFirstHeader("Set-Cookie"));
			String respXml = response.getResponse();
			
			Pattern pat = Pattern.compile("onclick=\"openmenu\\(getAttribute\\('menuaddr'\\).replace\\(new RegExp\\('&amp;amp;','gm'\\),"
					+ "'&amp;'\\)\\);\" id=\"homemenu\" style=\"display:none\" "
					+ "menuaddr=\"custserv\\?service=page/pub\\.chkcust\\.CustAuthMain&amp;&amp;"
					+ "LOGIN_RANDOM_CODE=([^&]*)&amp;"			//1
					+ "LOGIN_REMOTE_ADDR=null&amp;"
					+ "LOGIN_CHECK_CODE=([^&]*)&amp;"			//2
					+ "LOGIN_PROVINCE_CODE=");
			
			Matcher mat = pat.matcher(respXml);
			if(mat.find()){
				this.client.getParam().setLOGIN_RANDOM_CODE(mat.group(1));
				this.data.setLOGIN_RANDOM_CODE(mat.group(1));
			}
//			logger.info("");
			return true;
		}catch(Exception e){
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public String getUrl() {
		return "https://gd.cbss.10010.com/essframe?service=page/Sidebar";
	}

	@Override
	public String getReferer() {
		return "https://gd.cbss.10010.com/essframe";
	}

	@Override
	public boolean isXMLHttpRequest() {
		return false;
	}

	@Override
	public boolean isPost() {
		return false;
	}

}
